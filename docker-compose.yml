version: '3.8'

services:
  pedidservice:
    image: easantos0001/pedidservice
    container_name: PedidoService
    build:
      context: .
      dockerfile: PedidoService/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - rabbitmq
      - mysql
    networks:
      - dockernetwork

  produtservice:
    image: easantos0001/produtservice
    container_name: ProdutoService
    build:
      context: .
      dockerfile: ProdutoService/Dockerfile
    ports:
      - "5001:80"
    depends_on:
      - rabbitmq
      - mysql
    networks:
      - dockernetwork

  pagamentservice:
    image: easantos0001/pagamentservice
    container_name: PagamentoService
    build:
      context: .
      dockerfile: PagamentoService/Dockerfile
    ports:
      - "5002:80"
    depends_on:
      - rabbitmq
      - mysql
    networks:
      - dockernetwork

  clienteservice:
    image: easantos0001/clienteservice
    container_name: ClienteService
    build:
      context: .
      dockerfile: ClienteService/Dockerfile
    ports:
      - "5003:80"
    depends_on:
      - rabbitmq
      - mysql
    networks:
      - dockernetwork

  notificationservice:
    image: easantos0001/notificationservice
    container_name: NotificationService
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    ports:
      - "5004:80"
    depends_on:
      - rabbitmq
      - mysql
    networks:
      - dockernetwork

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - dockernetwork

  mysql:
    image: "mysql"
    command: --innodb-use-native-aio=0
    container_name: mysql-db
    restart: always
    tty: true
    ports:
      - "3307:3306"
    environment:
     - MYSQL_DATABASE=msqldb
     - MYSQL_ROOT_PASSWORD=tech@123
    networks:
      - dockernetwork

networks:
  dockernetwork:
    driver: bridge
    name: dockernetwork   
